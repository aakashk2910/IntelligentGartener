//extends layout
//
//block content
//  h1= title
//  p Welcome to #{title}

doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    link(rel='apple-touch-icon', sizes='76x76', href='/assets/img/apple-icon.png')
    link(rel='icon', type='image/png', href='/assets/img/favicon.png')
    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
    title #{title}
    meta(content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0', name='viewport')
    meta(name='viewport', content='width=device-width')
    // Bootstrap core CSS
    link(href='/assets/css/bootstrap.min.css', rel='stylesheet')
    // Material Dashboard CSS
    link(href='/assets/css/material-dashboard.css?v=1.2.0', rel='stylesheet')
    // CSS for ig Purpose, don't include it in your project
    link(href='/assets/css/ig.css', rel='stylesheet')
    // Fonts and icons
    link(href='http://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css', rel='stylesheet')
    link(href='http://fonts.googleapis.com/css?family=Roboto:400,700,300|Material+Icons', rel='stylesheet', type='text/css')
  body
    .wrapper
      .sidebar(data-color='purple', data-image='/assets/img/sidebar-1.jpg')
        //
          Tip 1: You can change the color of the sidebar using: data-color="purple | blue | green | orange | red"
          Tip 2: you can also add an image using data-image tag
        .logo
          a.simple-text(href='/')
            | Intelligent
            br
            |                     Gartenarbeiten
        .sidebar-wrapper
          ul.nav
            li.active
              a(href='/')
                i.material-icons dashboard
                p Dashboard
            li
              a(href='/user')
                i.material-icons person
                p User Profile
            li
              a(href='/table')
                i.material-icons content_paste
                p Table List
      .main-panel
        nav.navbar.navbar-transparent.navbar-absolute
          .container-fluid
            .navbar-header
              button.navbar-toggle(type='button', data-toggle='collapse')
                span.sr-only Toggle navigation
                span.icon-bar
                span.icon-bar
                span.icon-bar
              a.navbar-brand(href='#')  Dashboard
            .collapse.navbar-collapse
              ul.nav.navbar-nav.navbar-right
                li
                  a.dropdown-toggle(href='#pablo', data-toggle='dropdown')
                    i.material-icons dashboard
                    p.hidden-lg.hidden-md Dashboard
                li.dropdown
                  a.dropdown-toggle(href='#', data-toggle='dropdown')
                    i.material-icons notifications
                    span.notification 5
                    p.hidden-lg.hidden-md Notifications
                  ul.dropdown-menu
                    li
                      a(href='#') Plant watered
                    li
                      a(href='#') Moisture content low
                    li
                      a(onclick="ig.showNotification('top','right')") Demo notification
                li
                  a.dropdown-toggle(href='#pablo', data-toggle='dropdown')
                    i.material-icons person
                    p.hidden-lg.hidden-md Profile
              form.navbar-form.navbar-right(role='search')
                .form-group.is-empty
                  input.form-control(type='text', placeholder='Search')
                  span.material-input
                button.btn.btn-white.btn-round.btn-just-icon(type='submit')
                  i.material-icons search
                  .ripple-container
        .content
          .container-fluid
            .row
              .col-lg-4.col-md-6.col-sm-6
                .card.card-stats
                  .card-header(onclick="ig.moistureNotification('top', 'center')", data-background-color='blue')
                    i.material-icons invert_colors
                  .card-content
                    p.category Moisture
                    h4.title
                      | #{moisture}/1024
                      br
                      small #{moistureStatus}
                  .card-footer
                    .stats
                      i.material-icons date_range
                      |  Last 24 Hours
              .col-lg-4.col-md-6.col-sm-6
                .card.card-stats
                  .card-header(onclick="ig.lightNotification('top', 'center')", data-background-color='orange')
                    i.material-icons wb_sunny
                  .card-content
                    p.category Light
                    h4.title
                      | #{light}/1024
                      br
                      small #{lightStatus}
                  .card-footer
                    .stats
                      i.material-icons date_range
                      |  Last 24 Hours
              .col-lg-4.col-md-6.col-sm-6
                .card.card-stats
                  .card-header(onclick="ig.healthNotification('top', 'center')", data-background-color='green')
                    i.material-icons local_florist
                  .card-content
                    p.category Health
                    h4.title
                      | #{health}/10
                      br
                      small #{healthStatus}
                  .card-footer
                    .stats
                      i.material-icons update
                      |  Just Updated
            .row
              .col-md-4
                .card
                  .card-header.card-chart(data-background-color='blue')
                    #moistureChart.ct-chart
                  .card-content
                    h4.title Moisture Content
                    p.category
                      span.text-success
                        i.fa.fa-long-arrow-up
                        |  #{percentMoistureChange}
                      |  #{commentMoisture}
                  .card-footer
                    .stats
                      i.material-icons access_time
                      |  updated 3 minutes ago
              .col-md-4
                .card
                  .card-header.card-chart(data-background-color='orange')
                    #lightChart.ct-chart
                  .card-content
                    h4.title Light availability
                    p.category Recent statistics
                  .card-footer
                    .stats
                      i.material-icons access_time
                      | updated 3 min ago
              .col-md-4
                .card
                  .card-header.card-chart(data-background-color='green')
                    #healthChart.ct-chart
                  .card-content
                    h4.title Plant health
                    p.category  Daily health data
                  .card-footer
                    .stats
                      i.material-icons access_time
                      | updated 1 day ago
        footer.footer
          .container-fluid
            nav.pull-left
              ul
                li
                  a(href='#')
                    | Dashboard
                li
                  a(href='#')
                    | Moisture
                li
                  a(href='#')
                    | Light
                li
                  a(href='#')
                    | Plant health
            p.copyright.pull-right
              | Â©
              script.
                  document.write(new Date().getFullYear())
              a(href='#') Intelligent Gartenarbeiten
  // Core JS Files
  script(src='/assets/js/jquery-3.2.1.min.js', type='text/javascript')
  script(src='/assets/js/bootstrap.min.js', type='text/javascript')
  script(src='/assets/js/material.min.js', type='text/javascript')
  // Charts Plugin
  script(src='/assets/js/chartist.min.js')
  // Dynamic Elements plugin
  script(src='/assets/js/arrive.min.js')
  // PerfectScrollbar Library
  script(src='/assets/js/perfect-scrollbar.jquery.min.js')
  // Notifications Plugin
  script(src='/assets/js/bootstrap-notify.js')
  // Google Maps Plugin
  script(type='text/javascript', src='https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE')
  // Material Dashboard javascript methods
  script(src='/assets/js/material-dashboard.js?v=1.2.0')
  // Material Dashboard ig methods, don't include it in your project!
  script(src='/assets/js/ig.js')
  script(type='text/javascript').
      $(document).ready(function() {

          var moistureReading = [];
          var sensorReadingTime = [];
          var lightReading = [];

          var datetime = require('node-datetime');

          // Load the Cloudant library.
          var Cloudant = require('cloudant');

          var me = '270d4676-7828-4e22-a88f-2cd83509be50-bluemix'; // Set this to your own account
          var password = '2fa835c1a88e237c3219ea76f5eb27ccd966ca1fb2c713701de86e5ce3f8831b';

          // Initialize the library with my account.
          var cloudant = Cloudant({account: me, password: password});

          cloudant.db.list(function (err, allDbs) {
              console.log('All my databases: %s', allDbs.join(', '))
          });

          var db = cloudant.db.use('iotp_3xowkp_sensordata_2018-01');

          db.list({include_docs: true}, function (err, data) {
              if (data) {
                  for (var i = 2; i < data.total_rows; i++) {
                      console.log(datetime.create(data.rows[i].doc.timestamp).format('H:M:S'));
                      console.log(data.rows[i].doc.data.d.soil);
                      console.log(data.rows[i].doc.data.d.light);

                      console.log("-----");

                      moistureReading.push(data.rows[i].doc.data.d.soil);
                      lightReading.push(data.rows[i].doc.data.d.light);
                      sensorReadingTime.push(datetime.create(data.rows[i].doc.timestamp).format('H:M:S'));

                  }

              } else {
                  console.log(err);
              }
          });


          /* ----------==========     Daily Heatlh initialization    ==========---------- */

          dataHealthChart = {
              labels: sensorReadingTime,
              series: [
                  [2, 7, 7, 7, 3, 8, 8]
              ]
          };

          optionsHealthChart = {
              lineSmooth: Chartist.Interpolation.cardinal({
                  tension: 0
              }),
              low: 0,
              high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look
              chartPadding: {
                  top: 0,
                  right: 0,
                  bottom: 0,
                  left: 0
              }
          }

          var healthChart = new Chartist.Line('#healthChart', dataHealthChart, optionsHealthChart);

          md.startAnimationForLineChart(healthChart);



      /* ----------==========     Moisture Chart initialization    ==========---------- */

      dataMoistureChart = {
          labels: sensorReadingTime,
          series: [
              moistureReading
          ]
      };

      optionsMoistureChart = {
          lineSmooth: Chartist.Interpolation.cardinal({
              tension: 0
          }),
          low: 0,
          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look
          chartPadding: {
              top: 0,
              right: 0,
              bottom: 0,
              left: 0
          }
      }

      var moistureChart = new Chartist.Line('#moistureChart', dataMoistureChart, optionsMoistureChart);

      // start animation for the Completed Tasks Chart - Line Chart
      md.startAnimationForLineChart(moistureChart);

          /* ----------==========    Light Chart initialization    ==========---------- */

          var dataLightChart = {
              labels: lightReading,
              series: [
                  sensorReadingTime
              ]
          };
          var optionsLightChart = {
              axisX: {
                  showGrid: false
              },
              low: 0,
              high: 1000,
              chartPadding: {
                  top: 0,
                  right: 5,
                  bottom: 0,
                  left: 0
              }
          };
          var responsiveOptions = [
              ['screen and (max-width: 640px)', {
                  seriesBarDistance: 5,
                  axisX: {
                      labelInterpolationFnc: function(value) {
                          return value[0];
                      }
                  }
              }]
          ];
          var lightChart = Chartist.Bar('#lightChart', dataLightChart, optionsLightChart, responsiveOptions);

          //start animation for the Emails Subscription Chart
          md.startAnimationForBarChart(lightChart);



          // klsklds


          // var Client = require('ibmiotf');
          //
          // var config = {
          //     "org": "3xowkp",
          //     "id": "garden",
          //     "domain": "internetofthings.ibmcloud.com",
          //     "type": "RaspberryPi3",
          //     //"auth-method": "token",
          //     //"auth-token": "asoubdou32beuabsd13",
          //     "auth-key": "a-3xowkp-icxxqn72s7",
          //     "auth-token": "EZOEcu!DqRn9JxmLK("
          // };
          //
          // var deviceClient = new Client.IotfApplication(config);
          //
          // deviceClient.connect();
          //
          // deviceClient.on('connect', function () {
          //     deviceClient.subscribeToDeviceEvents();
          // });
          //
          // /*window.onbeforeunload = function () {
          //     deviceClient.disconnect();
          //     // handle the exit event
          // };*/
          //
          // deviceClient.on("deviceEvent", function (deviceType, deviceId, eventType, format, payload) {
          //
          //     console.log("Device Event from :: " + deviceType + " : " + deviceId + " of event " + eventType + " with payload : " + payload);
          //     moisture = payload;
          //
          // });



      });